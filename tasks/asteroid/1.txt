(2, 1, 1)
(2, 1, 2)
(1, 1, 2)
(2, 0, 1)
(0, 1, 2)
(3, 1, 1)



# VOXELS = np.array(
#     [np.fromstring(line.strip()[1:-1], sep=',', dtype=int) for line in lines])
VOXELS = []
for line in lines:
    coordinates = line[1:-1].split(", ")
    coordinates = tuple(int(x) for x in coordinates)
    VOXELS.append(Voxel(coordinates))
# NUM_OF_VOXELS = VOXELS.shape[0]
NUM_OF_VOXELS = len(VOXELS)
# NEIGHBOURS = {}
for voxel in VOXELS:
    print(voxel)



# def have_common_area(a, b):
# dx = abs(a[0] - b[0])
# dy = abs(a[1] - b[1])
# dz = abs(a[2] - b[2])
# return (dx, dy, dz) in ((1, 0, 0), (0, 1, 0), (0, 0, 1))


# def save_neighbours(a, b):
#     global NEIGHBOURS

#     if tuple(a) not in NEIGHBOURS:
#         NEIGHBOURS[tuple(a)] = [b]
#     else:
#         NEIGHBOURS[tuple(a)].append(b)




# # import numpy as np


# fig = plt.figure()
# ax = fig.add_subplot(111, projection='3d')

# voxel = np.array(
#     [np.fromstring(line.strip()[1:-1], sep=',', dtype=int) for line in lines])
# for vertex in voxel:

#     vertices = np.array([
#         [vertex[0], vertex[1], vertex[2]],
#         [vertex[0] + 1, vertex[1], vertex[2]],
#         [vertex[0] + 1, vertex[1] + 1, vertex[2]],
#         [vertex[0], vertex[1] + 1, vertex[2]],
#         [vertex[0], vertex[1], vertex[2] + 1],
#         [vertex[0] + 1, vertex[1], vertex[2] + 1],
#         [vertex[0] + 1, vertex[1] + 1, vertex[2] + 1],
#         [vertex[0], vertex[1] + 1, vertex[2] + 1]
#     ])

#     # Define the six faces of the cube
#     faces = [
#         [vertices[0], vertices[1], vertices[2], vertices[3]],
#         [vertices[0], vertices[4], vertices[5], vertices[1]],
#         [vertices[1], vertices[5], vertices[6], vertices[2]],
#         [vertices[2], vertices[6], vertices[7], vertices[3]],
#         [vertices[3], vertices[7], vertices[4], vertices[0]],
#         [vertices[4], vertices[7], vertices[6], vertices[5]]
#     ]

#     # Plot the faces
#     for face in faces:
#         x, y, z = zip(*face)
#         ax.plot(x, y, z, color='b')

# # Set the limits of the plot
# ax.set_xlim(0, 6)
# ax.set_ylim(0, 6)
# ax.set_zlim(0, 6)

# # Show the plot
# plt.show()
